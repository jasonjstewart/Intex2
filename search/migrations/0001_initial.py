# Generated by Django 2.1.8 on 2019-04-11 08:52

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Drugs',
            fields=[
                ('drugid', models.BigIntegerField(db_column='DrugID', db_index=True)),
                ('drugname', models.CharField(db_column='DrugName', db_index=True, max_length=50, primary_key=True, serialize=False)),
                ('isopioid', models.BooleanField(blank=True, db_column='IsOpioid', db_index=True, null=True)),
            ],
            options={
                'db_table': 'Drugs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Prescriber',
            fields=[
                ('prescriberid', models.BigIntegerField(db_column='PrescriberID', db_index=True, primary_key=True, serialize=False)),
                ('fname', models.CharField(blank=True, db_column='Fname', db_index=True, max_length=11, null=True)),
                ('lname', models.CharField(blank=True, db_column='Lname', db_index=True, max_length=11, null=True)),
                ('gender', models.CharField(blank=True, db_column='Gender', db_index=True, max_length=2, null=True)),
                ('credentials', models.CharField(blank=True, db_column='Credentials', db_index=True, max_length=20, null=True)),
                ('specialty', models.CharField(blank=True, db_column='Specialty', db_index=True, max_length=62, null=True)),
                ('opioid_prescriber', models.BooleanField(blank=True, db_column='Opioid Prescriber', db_index=True, null=True)),
                ('totalprescriptions', models.BigIntegerField(blank=True, db_column='TotalPrescriptions', db_index=True, null=True)),
                ('abilify', models.IntegerField(blank=True, db_column='ABILIFY', null=True)),
                ('acetaminophen_codeine', models.IntegerField(blank=True, db_column='ACETAMINOPHEN CODEINE', null=True)),
                ('acyclovir', models.IntegerField(blank=True, db_column='ACYCLOVIR', null=True)),
                ('advair_diskus', models.IntegerField(blank=True, db_column='ADVAIR DISKUS', null=True)),
                ('aggrenox', models.IntegerField(blank=True, db_column='AGGRENOX', null=True)),
                ('alendronate_sodium', models.IntegerField(blank=True, db_column='ALENDRONATE SODIUM', null=True)),
                ('allopurinol', models.IntegerField(blank=True, db_column='ALLOPURINOL', null=True)),
                ('alprazolam', models.IntegerField(blank=True, db_column='ALPRAZOLAM', null=True)),
                ('amiodarone_hcl', models.IntegerField(blank=True, db_column='AMIODARONE HCL', null=True)),
                ('amitriptyline_hcl', models.IntegerField(blank=True, db_column='AMITRIPTYLINE HCL', null=True)),
                ('amlodipine_besylate', models.IntegerField(blank=True, db_column='AMLODIPINE BESYLATE', null=True)),
                ('amlodipine_besylate_benazepril', models.IntegerField(blank=True, db_column='AMLODIPINE BESYLATE BENAZEPRIL', null=True)),
                ('amoxicillin', models.IntegerField(blank=True, db_column='AMOXICILLIN', null=True)),
                ('amox_tr_potassium_clavulanate', models.IntegerField(blank=True, db_column='AMOX TR POTASSIUM CLAVULANATE', null=True)),
                ('amphetamine_salt_combo', models.IntegerField(blank=True, db_column='AMPHETAMINE SALT COMBO', null=True)),
                ('atenolol', models.IntegerField(blank=True, db_column='ATENOLOL', null=True)),
                ('atorvastatin_calcium', models.IntegerField(blank=True, db_column='ATORVASTATIN CALCIUM', null=True)),
                ('avodart', models.IntegerField(blank=True, db_column='AVODART', null=True)),
                ('azithromycin', models.IntegerField(blank=True, db_column='AZITHROMYCIN', null=True)),
                ('baclofen', models.IntegerField(blank=True, db_column='BACLOFEN', null=True)),
                ('bd_ultra_fine_pen_needle', models.IntegerField(blank=True, db_column='BD ULTRA FINE PEN NEEDLE', null=True)),
                ('benazepril_hcl', models.IntegerField(blank=True, db_column='BENAZEPRIL HCL', null=True)),
                ('benicar', models.IntegerField(blank=True, db_column='BENICAR', null=True)),
                ('benicar_hct', models.IntegerField(blank=True, db_column='BENICAR HCT', null=True)),
                ('benztropine_mesylate', models.IntegerField(blank=True, db_column='BENZTROPINE MESYLATE', null=True)),
                ('bisoprolol_hydrochlorothiazide', models.IntegerField(blank=True, db_column='BISOPROLOL HYDROCHLOROTHIAZIDE', null=True)),
                ('brimonidine_tartrate', models.IntegerField(blank=True, db_column='BRIMONIDINE TARTRATE', null=True)),
                ('bumetanide', models.IntegerField(blank=True, db_column='BUMETANIDE', null=True)),
                ('bupropion_hcl_sr', models.IntegerField(blank=True, db_column='BUPROPION HCL SR', null=True)),
                ('bupropion_xl', models.IntegerField(blank=True, db_column='BUPROPION XL', null=True)),
                ('buspirone_hcl', models.IntegerField(blank=True, db_column='BUSPIRONE HCL', null=True)),
                ('bystolic', models.IntegerField(blank=True, db_column='BYSTOLIC', null=True)),
                ('carbamazepine', models.IntegerField(blank=True, db_column='CARBAMAZEPINE', null=True)),
                ('carbidopa_levodopa', models.IntegerField(blank=True, db_column='CARBIDOPA LEVODOPA', null=True)),
                ('carisoprodol', models.IntegerField(blank=True, db_column='CARISOPRODOL', null=True)),
                ('cartia_xt', models.IntegerField(blank=True, db_column='CARTIA XT', null=True)),
                ('carvedilol', models.IntegerField(blank=True, db_column='CARVEDILOL', null=True)),
                ('cefuroxime', models.IntegerField(blank=True, db_column='CEFUROXIME', null=True)),
                ('celebrex', models.IntegerField(blank=True, db_column='CELEBREX', null=True)),
                ('cephalexin', models.IntegerField(blank=True, db_column='CEPHALEXIN', null=True)),
                ('chlorhexidine_gluconate', models.IntegerField(blank=True, db_column='CHLORHEXIDINE GLUCONATE', null=True)),
                ('chlorthalidone', models.IntegerField(blank=True, db_column='CHLORTHALIDONE', null=True)),
                ('cilostazol', models.IntegerField(blank=True, db_column='CILOSTAZOL', null=True)),
                ('ciprofloxacin_hcl', models.IntegerField(blank=True, db_column='CIPROFLOXACIN HCL', null=True)),
                ('citalopram_hbr', models.IntegerField(blank=True, db_column='CITALOPRAM HBR', null=True)),
                ('clindamycin_hcl', models.IntegerField(blank=True, db_column='CLINDAMYCIN HCL', null=True)),
                ('clobetasol_propionate', models.IntegerField(blank=True, db_column='CLOBETASOL PROPIONATE', null=True)),
                ('clonazepam', models.IntegerField(blank=True, db_column='CLONAZEPAM', null=True)),
                ('clonidine_hcl', models.IntegerField(blank=True, db_column='CLONIDINE HCL', null=True)),
                ('clopidogrel', models.IntegerField(blank=True, db_column='CLOPIDOGREL', null=True)),
                ('clotrimazole_betamethasone', models.IntegerField(blank=True, db_column='CLOTRIMAZOLE BETAMETHASONE', null=True)),
                ('colcrys', models.IntegerField(blank=True, db_column='COLCRYS', null=True)),
                ('combivent_respimat', models.IntegerField(blank=True, db_column='COMBIVENT RESPIMAT', null=True)),
                ('crestor', models.IntegerField(blank=True, db_column='CRESTOR', null=True)),
                ('cyclobenzaprine_hcl', models.IntegerField(blank=True, db_column='CYCLOBENZAPRINE HCL', null=True)),
                ('dexilant', models.IntegerField(blank=True, db_column='DEXILANT', null=True)),
                ('diazepam', models.IntegerField(blank=True, db_column='DIAZEPAM', null=True)),
                ('diclofenac_sodium', models.IntegerField(blank=True, db_column='DICLOFENAC SODIUM', null=True)),
                ('dicyclomine_hcl', models.IntegerField(blank=True, db_column='DICYCLOMINE HCL', null=True)),
                ('digox', models.IntegerField(blank=True, db_column='DIGOX', null=True)),
                ('digoxin', models.IntegerField(blank=True, db_column='DIGOXIN', null=True)),
                ('diltiazem_24hr_cd', models.IntegerField(blank=True, db_column='DILTIAZEM 24HR CD', null=True)),
                ('diltiazem_24hr_er', models.IntegerField(blank=True, db_column='DILTIAZEM 24HR ER', null=True)),
                ('diltiazem_er', models.IntegerField(blank=True, db_column='DILTIAZEM ER', null=True)),
                ('diltiazem_hcl', models.IntegerField(blank=True, db_column='DILTIAZEM HCL', null=True)),
                ('diovan', models.IntegerField(blank=True, db_column='DIOVAN', null=True)),
                ('diphenoxylate_atropine', models.IntegerField(blank=True, db_column='DIPHENOXYLATE ATROPINE', null=True)),
                ('divalproex_sodium', models.IntegerField(blank=True, db_column='DIVALPROEX SODIUM', null=True)),
                ('divalproex_sodium_er', models.IntegerField(blank=True, db_column='DIVALPROEX SODIUM ER', null=True)),
                ('donepezil_hcl', models.IntegerField(blank=True, db_column='DONEPEZIL HCL', null=True)),
                ('dorzolamide_timolol', models.IntegerField(blank=True, db_column='DORZOLAMIDE TIMOLOL', null=True)),
                ('doxazosin_mesylate', models.IntegerField(blank=True, db_column='DOXAZOSIN MESYLATE', null=True)),
                ('doxepin_hcl', models.IntegerField(blank=True, db_column='DOXEPIN HCL', null=True)),
                ('doxycycline_hyclate', models.IntegerField(blank=True, db_column='DOXYCYCLINE HYCLATE', null=True)),
                ('duloxetine_hcl', models.IntegerField(blank=True, db_column='DULOXETINE HCL', null=True)),
                ('enalapril_maleate', models.IntegerField(blank=True, db_column='ENALAPRIL MALEATE', null=True)),
                ('escitalopram_oxalate', models.IntegerField(blank=True, db_column='ESCITALOPRAM OXALATE', null=True)),
                ('estradiol', models.IntegerField(blank=True, db_column='ESTRADIOL', null=True)),
                ('exelon', models.IntegerField(blank=True, db_column='EXELON', null=True)),
                ('famotidine', models.IntegerField(blank=True, db_column='FAMOTIDINE', null=True)),
                ('felodipine_er', models.IntegerField(blank=True, db_column='FELODIPINE ER', null=True)),
                ('fenofibrate', models.IntegerField(blank=True, db_column='FENOFIBRATE', null=True)),
                ('fentanyl', models.IntegerField(blank=True, db_column='FENTANYL', null=True)),
                ('finasteride', models.IntegerField(blank=True, db_column='FINASTERIDE', null=True)),
                ('flovent_hfa', models.IntegerField(blank=True, db_column='FLOVENT HFA', null=True)),
                ('fluconazole', models.IntegerField(blank=True, db_column='FLUCONAZOLE', null=True)),
                ('fluoxetine_hcl', models.IntegerField(blank=True, db_column='FLUOXETINE HCL', null=True)),
                ('fluticasone_propionate', models.IntegerField(blank=True, db_column='FLUTICASONE PROPIONATE', null=True)),
                ('furosemide', models.IntegerField(blank=True, db_column='FUROSEMIDE', null=True)),
                ('gabapentin', models.IntegerField(blank=True, db_column='GABAPENTIN', null=True)),
                ('gemfibrozil', models.IntegerField(blank=True, db_column='GEMFIBROZIL', null=True)),
                ('glimepiride', models.IntegerField(blank=True, db_column='GLIMEPIRIDE', null=True)),
                ('glipizide', models.IntegerField(blank=True, db_column='GLIPIZIDE', null=True)),
                ('glipizide_er', models.IntegerField(blank=True, db_column='GLIPIZIDE ER', null=True)),
                ('glipizide_xl', models.IntegerField(blank=True, db_column='GLIPIZIDE XL', null=True)),
                ('glyburide', models.IntegerField(blank=True, db_column='GLYBURIDE', null=True)),
                ('haloperidol', models.IntegerField(blank=True, db_column='HALOPERIDOL', null=True)),
                ('humalog', models.IntegerField(blank=True, db_column='HUMALOG', null=True)),
                ('hydralazine_hcl', models.IntegerField(blank=True, db_column='HYDRALAZINE HCL', null=True)),
                ('hydrochlorothiazide', models.IntegerField(blank=True, db_column='HYDROCHLOROTHIAZIDE', null=True)),
                ('hydrocodone_acetaminophen', models.IntegerField(blank=True, db_column='HYDROCODONE ACETAMINOPHEN', null=True)),
                ('hydrocortisone', models.IntegerField(blank=True, db_column='HYDROCORTISONE', null=True)),
                ('hydromorphone_hcl', models.IntegerField(blank=True, db_column='HYDROMORPHONE HCL', null=True)),
                ('hydroxyzine_hcl', models.IntegerField(blank=True, db_column='HYDROXYZINE HCL', null=True)),
                ('ibandronate_sodium', models.IntegerField(blank=True, db_column='IBANDRONATE SODIUM', null=True)),
                ('ibuprofen', models.IntegerField(blank=True, db_column='IBUPROFEN', null=True)),
                ('insulin_syringe', models.IntegerField(blank=True, db_column='INSULIN SYRINGE', null=True)),
                ('ipratropium_bromide', models.IntegerField(blank=True, db_column='IPRATROPIUM BROMIDE', null=True)),
                ('irbesartan', models.IntegerField(blank=True, db_column='IRBESARTAN', null=True)),
                ('isosorbide_mononitrate_er', models.IntegerField(blank=True, db_column='ISOSORBIDE MONONITRATE ER', null=True)),
                ('jantoven', models.IntegerField(blank=True, db_column='JANTOVEN', null=True)),
                ('janumet', models.IntegerField(blank=True, db_column='JANUMET', null=True)),
                ('januvia', models.IntegerField(blank=True, db_column='JANUVIA', null=True)),
                ('ketoconazole', models.IntegerField(blank=True, db_column='KETOCONAZOLE', null=True)),
                ('klor_con_10', models.IntegerField(blank=True, db_column='KLOR CON 10', null=True)),
                ('klor_con_m10', models.IntegerField(blank=True, db_column='KLOR CON M10', null=True)),
                ('klor_con_m20', models.IntegerField(blank=True, db_column='KLOR CON M20', null=True)),
                ('labetalol_hcl', models.IntegerField(blank=True, db_column='LABETALOL HCL', null=True)),
                ('lactulose', models.IntegerField(blank=True, db_column='LACTULOSE', null=True)),
                ('lamotrigine', models.IntegerField(blank=True, db_column='LAMOTRIGINE', null=True)),
                ('lansoprazole', models.IntegerField(blank=True, db_column='LANSOPRAZOLE', null=True)),
                ('lantus', models.IntegerField(blank=True, db_column='LANTUS', null=True)),
                ('lantus_solostar', models.IntegerField(blank=True, db_column='LANTUS SOLOSTAR', null=True)),
                ('latanoprost', models.IntegerField(blank=True, db_column='LATANOPROST', null=True)),
                ('levemir', models.IntegerField(blank=True, db_column='LEVEMIR', null=True)),
                ('levemir_flexpen', models.IntegerField(blank=True, db_column='LEVEMIR FLEXPEN', null=True)),
                ('levetiracetam', models.IntegerField(blank=True, db_column='LEVETIRACETAM', null=True)),
                ('levofloxacin', models.IntegerField(blank=True, db_column='LEVOFLOXACIN', null=True)),
                ('levothyroxine_sodium', models.IntegerField(blank=True, db_column='LEVOTHYROXINE SODIUM', null=True)),
                ('lidocaine', models.IntegerField(blank=True, db_column='LIDOCAINE', null=True)),
                ('lisinopril', models.IntegerField(blank=True, db_column='LISINOPRIL', null=True)),
                ('lisinopril_hydrochlorothiazide', models.IntegerField(blank=True, db_column='LISINOPRIL HYDROCHLOROTHIAZIDE', null=True)),
                ('lithium_carbonate', models.IntegerField(blank=True, db_column='LITHIUM CARBONATE', null=True)),
                ('lorazepam', models.IntegerField(blank=True, db_column='LORAZEPAM', null=True)),
                ('losartan_hydrochlorothiazide', models.IntegerField(blank=True, db_column='LOSARTAN HYDROCHLOROTHIAZIDE', null=True)),
                ('losartan_potassium', models.IntegerField(blank=True, db_column='LOSARTAN POTASSIUM', null=True)),
                ('lovastatin', models.IntegerField(blank=True, db_column='LOVASTATIN', null=True)),
                ('lovaza', models.IntegerField(blank=True, db_column='LOVAZA', null=True)),
                ('lumigan', models.IntegerField(blank=True, db_column='LUMIGAN', null=True)),
                ('lyrica', models.IntegerField(blank=True, db_column='LYRICA', null=True)),
                ('meclizine_hcl', models.IntegerField(blank=True, db_column='MECLIZINE HCL', null=True)),
                ('meloxicam', models.IntegerField(blank=True, db_column='MELOXICAM', null=True)),
                ('metformin_hcl', models.IntegerField(blank=True, db_column='METFORMIN HCL', null=True)),
                ('metformin_hcl_er', models.IntegerField(blank=True, db_column='METFORMIN HCL ER', null=True)),
                ('methadone_hcl', models.IntegerField(blank=True, db_column='METHADONE HCL', null=True)),
                ('methocarbamol', models.IntegerField(blank=True, db_column='METHOCARBAMOL', null=True)),
                ('methotrexate', models.IntegerField(blank=True, db_column='METHOTREXATE', null=True)),
                ('methylprednisolone', models.IntegerField(blank=True, db_column='METHYLPREDNISOLONE', null=True)),
                ('metoclopramide_hcl', models.IntegerField(blank=True, db_column='METOCLOPRAMIDE HCL', null=True)),
                ('metolazone', models.IntegerField(blank=True, db_column='METOLAZONE', null=True)),
                ('metoprolol_succinate', models.IntegerField(blank=True, db_column='METOPROLOL SUCCINATE', null=True)),
                ('metoprolol_tartrate', models.IntegerField(blank=True, db_column='METOPROLOL TARTRATE', null=True)),
                ('metronidazole', models.IntegerField(blank=True, db_column='METRONIDAZOLE', null=True)),
                ('mirtazapine', models.IntegerField(blank=True, db_column='MIRTAZAPINE', null=True)),
                ('montelukast_sodium', models.IntegerField(blank=True, db_column='MONTELUKAST SODIUM', null=True)),
                ('morphine_sulfate', models.IntegerField(blank=True, db_column='MORPHINE SULFATE', null=True)),
                ('morphine_sulfate_er', models.IntegerField(blank=True, db_column='MORPHINE SULFATE ER', null=True)),
                ('mupirocin', models.IntegerField(blank=True, db_column='MUPIROCIN', null=True)),
                ('nabumetone', models.IntegerField(blank=True, db_column='NABUMETONE', null=True)),
                ('namenda', models.IntegerField(blank=True, db_column='NAMENDA', null=True)),
                ('namenda_xr', models.IntegerField(blank=True, db_column='NAMENDA XR', null=True)),
                ('naproxen', models.IntegerField(blank=True, db_column='NAPROXEN', null=True)),
                ('nasonex', models.IntegerField(blank=True, db_column='NASONEX', null=True)),
                ('nexium', models.IntegerField(blank=True, db_column='NEXIUM', null=True)),
                ('niacin_er', models.IntegerField(blank=True, db_column='NIACIN ER', null=True)),
                ('nifedical_xl', models.IntegerField(blank=True, db_column='NIFEDICAL XL', null=True)),
                ('nifedipine_er', models.IntegerField(blank=True, db_column='NIFEDIPINE ER', null=True)),
                ('nitrofurantoin_mono_macro', models.IntegerField(blank=True, db_column='NITROFURANTOIN MONO MACRO', null=True)),
                ('nitrostat', models.IntegerField(blank=True, db_column='NITROSTAT', null=True)),
                ('nortriptyline_hcl', models.IntegerField(blank=True, db_column='NORTRIPTYLINE HCL', null=True)),
                ('novolog', models.IntegerField(blank=True, db_column='NOVOLOG', null=True)),
                ('novolog_flexpen', models.IntegerField(blank=True, db_column='NOVOLOG FLEXPEN', null=True)),
                ('nystatin', models.IntegerField(blank=True, db_column='NYSTATIN', null=True)),
                ('olanzapine', models.IntegerField(blank=True, db_column='OLANZAPINE', null=True)),
                ('omeprazole', models.IntegerField(blank=True, db_column='OMEPRAZOLE', null=True)),
                ('ondansetron_hcl', models.IntegerField(blank=True, db_column='ONDANSETRON HCL', null=True)),
                ('ondansetron_odt', models.IntegerField(blank=True, db_column='ONDANSETRON ODT', null=True)),
                ('onglyza', models.IntegerField(blank=True, db_column='ONGLYZA', null=True)),
                ('oxcarbazepine', models.IntegerField(blank=True, db_column='OXCARBAZEPINE', null=True)),
                ('oxybutynin_chloride', models.IntegerField(blank=True, db_column='OXYBUTYNIN CHLORIDE', null=True)),
                ('oxybutynin_chloride_er', models.IntegerField(blank=True, db_column='OXYBUTYNIN CHLORIDE ER', null=True)),
                ('oxycodone_acetaminophen', models.IntegerField(blank=True, db_column='OXYCODONE ACETAMINOPHEN', null=True)),
                ('oxycodone_hcl', models.IntegerField(blank=True, db_column='OXYCODONE HCL', null=True)),
                ('oxycontin', models.IntegerField(blank=True, db_column='OXYCONTIN', null=True)),
                ('pantoprazole_sodium', models.IntegerField(blank=True, db_column='PANTOPRAZOLE SODIUM', null=True)),
                ('paroxetine_hcl', models.IntegerField(blank=True, db_column='PAROXETINE HCL', null=True)),
                ('phenobarbital', models.IntegerField(blank=True, db_column='PHENOBARBITAL', null=True)),
                ('phenytoin_sodium_extended', models.IntegerField(blank=True, db_column='PHENYTOIN SODIUM EXTENDED', null=True)),
                ('pioglitazone_hcl', models.IntegerField(blank=True, db_column='PIOGLITAZONE HCL', null=True)),
                ('polyethylene_glycol_3350', models.IntegerField(blank=True, db_column='POLYETHYLENE GLYCOL 3350', null=True)),
                ('potassium_chloride', models.IntegerField(blank=True, db_column='POTASSIUM CHLORIDE', null=True)),
                ('pradaxa', models.IntegerField(blank=True, db_column='PRADAXA', null=True)),
                ('pramipexole_dihydrochloride', models.IntegerField(blank=True, db_column='PRAMIPEXOLE DIHYDROCHLORIDE', null=True)),
                ('pravastatin_sodium', models.IntegerField(blank=True, db_column='PRAVASTATIN SODIUM', null=True)),
                ('prednisone', models.IntegerField(blank=True, db_column='PREDNISONE', null=True)),
                ('premarin', models.IntegerField(blank=True, db_column='PREMARIN', null=True)),
                ('primidone', models.IntegerField(blank=True, db_column='PRIMIDONE', null=True)),
                ('proair_hfa', models.IntegerField(blank=True, db_column='PROAIR HFA', null=True)),
                ('promethazine_hcl', models.IntegerField(blank=True, db_column='PROMETHAZINE HCL', null=True)),
                ('propranolol_hcl', models.IntegerField(blank=True, db_column='PROPRANOLOL HCL', null=True)),
                ('propranolol_hcl_er', models.IntegerField(blank=True, db_column='PROPRANOLOL HCL ER', null=True)),
                ('quetiapine_fumarate', models.IntegerField(blank=True, db_column='QUETIAPINE FUMARATE', null=True)),
                ('quinapril_hcl', models.IntegerField(blank=True, db_column='QUINAPRIL HCL', null=True)),
                ('raloxifene_hcl', models.IntegerField(blank=True, db_column='RALOXIFENE HCL', null=True)),
                ('ramipril', models.IntegerField(blank=True, db_column='RAMIPRIL', null=True)),
                ('ranexa', models.IntegerField(blank=True, db_column='RANEXA', null=True)),
                ('ranitidine_hcl', models.IntegerField(blank=True, db_column='RANITIDINE HCL', null=True)),
                ('restasis', models.IntegerField(blank=True, db_column='RESTASIS', null=True)),
                ('risperidone', models.IntegerField(blank=True, db_column='RISPERIDONE', null=True)),
                ('ropinirole_hcl', models.IntegerField(blank=True, db_column='ROPINIROLE HCL', null=True)),
                ('seroquel_xr', models.IntegerField(blank=True, db_column='SEROQUEL XR', null=True)),
                ('sertraline_hcl', models.IntegerField(blank=True, db_column='SERTRALINE HCL', null=True)),
                ('simvastatin', models.IntegerField(blank=True, db_column='SIMVASTATIN', null=True)),
                ('sotalol', models.IntegerField(blank=True, db_column='SOTALOL', null=True)),
                ('spiriva', models.IntegerField(blank=True, db_column='SPIRIVA', null=True)),
                ('spironolactone', models.IntegerField(blank=True, db_column='SPIRONOLACTONE', null=True)),
                ('sucralfate', models.IntegerField(blank=True, db_column='SUCRALFATE', null=True)),
                ('sulfamethoxazole_trimethoprim', models.IntegerField(blank=True, db_column='SULFAMETHOXAZOLE TRIMETHOPRIM', null=True)),
                ('sumatriptan_succinate', models.IntegerField(blank=True, db_column='SUMATRIPTAN SUCCINATE', null=True)),
                ('symbicort', models.IntegerField(blank=True, db_column='SYMBICORT', null=True)),
                ('synthroid', models.IntegerField(blank=True, db_column='SYNTHROID', null=True)),
                ('tamsulosin_hcl', models.IntegerField(blank=True, db_column='TAMSULOSIN HCL', null=True)),
                ('temazepam', models.IntegerField(blank=True, db_column='TEMAZEPAM', null=True)),
                ('terazosin_hcl', models.IntegerField(blank=True, db_column='TERAZOSIN HCL', null=True)),
                ('timolol_maleate', models.IntegerField(blank=True, db_column='TIMOLOL MALEATE', null=True)),
                ('tizanidine_hcl', models.IntegerField(blank=True, db_column='TIZANIDINE HCL', null=True)),
                ('tolterodine_tartrate_er', models.IntegerField(blank=True, db_column='TOLTERODINE TARTRATE ER', null=True)),
                ('topiramate', models.IntegerField(blank=True, db_column='TOPIRAMATE', null=True)),
                ('toprol_xl', models.IntegerField(blank=True, db_column='TOPROL XL', null=True)),
                ('torsemide', models.IntegerField(blank=True, db_column='TORSEMIDE', null=True)),
                ('tramadol_hcl', models.IntegerField(blank=True, db_column='TRAMADOL HCL', null=True)),
                ('travatan_z', models.IntegerField(blank=True, db_column='TRAVATAN Z', null=True)),
                ('trazodone_hcl', models.IntegerField(blank=True, db_column='TRAZODONE HCL', null=True)),
                ('triamcinolone_acetonide', models.IntegerField(blank=True, db_column='TRIAMCINOLONE ACETONIDE', null=True)),
                ('triamterene_hydrochlorothiazid', models.IntegerField(blank=True, db_column='TRIAMTERENE HYDROCHLOROTHIAZID', null=True)),
                ('valacyclovir', models.IntegerField(blank=True, db_column='VALACYCLOVIR', null=True)),
                ('valsartan', models.IntegerField(blank=True, db_column='VALSARTAN', null=True)),
                ('valsartan_hydrochlorothiazide', models.IntegerField(blank=True, db_column='VALSARTAN HYDROCHLOROTHIAZIDE', null=True)),
                ('venlafaxine_hcl', models.IntegerField(blank=True, db_column='VENLAFAXINE HCL', null=True)),
                ('venlafaxine_hcl_er', models.IntegerField(blank=True, db_column='VENLAFAXINE HCL ER', null=True)),
                ('ventolin_hfa', models.IntegerField(blank=True, db_column='VENTOLIN HFA', null=True)),
                ('verapamil_er', models.IntegerField(blank=True, db_column='VERAPAMIL ER', null=True)),
                ('vesicare', models.IntegerField(blank=True, db_column='VESICARE', null=True)),
                ('voltaren', models.IntegerField(blank=True, db_column='VOLTAREN', null=True)),
                ('vytorin', models.IntegerField(blank=True, db_column='VYTORIN', null=True)),
                ('warfarin_sodium', models.IntegerField(blank=True, db_column='WARFARIN SODIUM', null=True)),
                ('xarelto', models.IntegerField(blank=True, db_column='XARELTO', null=True)),
                ('zetia', models.IntegerField(blank=True, db_column='ZETIA', null=True)),
                ('ziprasidone_hcl', models.IntegerField(blank=True, db_column='ZIPRASIDONE HCL', null=True)),
                ('zolpidem_tartrate', models.IntegerField(blank=True, db_column='ZOLPIDEM TARTRATE', null=True)),
            ],
            options={
                'db_table': 'Prescriber',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrescriberPercentile',
            fields=[
                ('prescriberid', models.BigIntegerField(db_column='PrescriberID', primary_key=True, serialize=False)),
                ('percentile', models.FloatField()),
            ],
            options={
                'db_table': 'prescriber_percentile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Statedata',
            fields=[
                ('state', models.CharField(db_column='State', db_index=True, max_length=50)),
                ('stateabbrev', models.CharField(db_column='StateAbbrev', db_index=True, max_length=2, primary_key=True, serialize=False)),
                ('population', models.BigIntegerField(blank=True, db_column='Population', db_index=True, null=True)),
                ('deaths', models.IntegerField(blank=True, db_column='Deaths', db_index=True, null=True)),
            ],
            options={
                'db_table': 'StateData',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TopTenWorst',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prescriberid', models.BigIntegerField(blank=True, null=True)),
                ('fname', models.CharField(blank=True, db_column='Fname', max_length=50, null=True)),
                ('lname', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('credentials', models.CharField(blank=True, max_length=50, null=True)),
                ('specialty', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'top_ten_worst',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Triple',
            fields=[
                ('id', models.BigIntegerField(db_column='ID', db_index=True, primary_key=True, serialize=False)),
                ('qty', models.IntegerField(db_column='Qty', db_index=True)),
            ],
            options={
                'db_table': 'Triple',
                'managed': False,
            },
        ),
    ]
